<?php

/**
 * @file
 * Preprocess functions for SCCR subtheme.
 */

/**
 * Prepares variables for the html.html.twig template.
 */
function sccr_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = \Drupal::service('extension.list.theme')->getPath('stanford_basic');
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function sccr_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'sccr_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}

/**
 * Implements hook_preprocess_paragraph__stanford_layout().
 */
function sccr_subtheme_preprocess_paragraph__stanford_layout(array &$variables): void {
  /** @var \Drupal\paragraphs\Layout\Paragraph $paragraph */
  $paragraph = &$variables['paragraph'];
  $existing_classes = $variables['attributes']['class'] ?? [];
  $extra_classes = [
    $paragraph->getBehaviorSetting('react_paragraphs:layout_variant_info', 'section_color'),
  ];
  $variables['attributes']['class'] = array_merge($existing_classes, $extra_classes);
}

/**
 * Implements hook_preprocess_page().
 */
function sccr_subtheme_preprocess_page(&$vars) {
  // Implement full-width basic page styles
  $is_page_node = isset($vars['node']) && $vars['node'] instanceof NodeInterface && $vars['node']->bundle() == 'stanford_page';

  if (!$is_page_node) {
    return;
  }

  $has_layout_field = $vars['node']->hasField('layout_selection') && $vars['node']->get('layout_selection')->getString() == 'stanford_basic_page_full';

  if ($has_layout_field) {
    $vars['#attached']['library'][] = 'basic-page-full-width';
  }
}
